"""
This type stub file was generated by pyright.
"""

from typing import List, Optional

class BaseFlaskPydanticException(Exception):
    """Base exc class for all exception from this library"""

    ...

class InvalidIterableOfModelsException(BaseFlaskPydanticException):
    """This exception is raised if there is a failure during serialization of
    response object with `response_many=True`"""

    ...

class JsonBodyParsingError(BaseFlaskPydanticException):
    """Exception for error occurring during parsing of request body"""

    ...

class ManyModelValidationError(BaseFlaskPydanticException):
    """This exception is raised if there is a failure during validation of many
    models in an iterable"""

    def __init__(self, errors: List[dict], *args) -> None: ...
    def errors(self): ...

class ValidationError(BaseFlaskPydanticException):
    """This exception is raised if there is a failure during validation if the
    user has configured an exception to be raised instead of a response"""

    def __init__(
        self,
        body_params: Optional[List[dict]] = ...,
        form_params: Optional[List[dict]] = ...,
        path_params: Optional[List[dict]] = ...,
        query_params: Optional[List[dict]] = ...,
    ) -> None: ...
